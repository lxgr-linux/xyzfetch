#!/usr/bin/env python3
#maintainer lxgr <lxgr@protonmail.com>
#Licensed under the GPL3 and comes without any warranty

import os, sys, distro, platform, psutil

def format_bytes(size):
    power = 2**10
    n = 0
    power_labels = {0 : '', 1: 'K', 2: 'M', 3: 'G', 4: 'T'}
    while size > power:
        size /= power
        n += 1
    return str(round(size, 1))+''+power_labels[n]

with open("/proc/cpuinfo", "r") as file:
    out=file.read()

dist = distro.id()
color = '\033[36m'
thic = "\033[1m"

i=1
while i < len(sys.argv):
    if sys.argv[i] == "--color":
        color = '\033['+sys.argv[i+1]+"m"
        i+=2
    elif sys.argv[i] == "--distro":
        dist = sys.argv[i+1]
        i+=2
    elif sys.argv[i] == "--help":
        print("xyzfetch - A small fetching tool\n\
Usage: "+sys.argv[0]+" <option> <string>\n\
      --help            : shows this help dialog\n\
      --distro <string> : defines distro\n\
      --color <string>  : defines color")
        exit()
    else:
        i+=1

pics={
"arch": """         .
         cc
        :ooc
       ,clooc
      cooooool.
    .looo:coool.
   .lool.  .looo.
  'oooo:    :oolc.
 ;c;'.        ..;c;
.                 ..""",
"archarm": """         .
         cc
        :ooc
       ,clooc
      cooooool.
    .looo:coool.
   .lool.  .looo.
  'oooo:    :oolc.
 ;c;'.        ..;c;
.                 ..""",
"debian": """      .:odllc'.
   ,lxxo;,,,,:oxd;.
 'xl'.          ;Ox.
:k.     '....    :O.
oc     ';        :d.
cl     .c,.   .';,
.xl.      .''..
  cd.
    ;:,.
       ,:..   """,
"hipster": """      ';;,;,.'
     .;.''::::;
  ;::. ..';::::'
  .,::;'...;:::;::,
    ,..,;::::::::;.
';lc:.O0;.';;:;.
dMMMM. XMWKd0M0 ...
 KMM0   . ,c.;l0MMK
  xMX.       ,MMMx
   .dKo.    ,NNd.
      ,xdc;ox,""",
}

infos={
"OS": distro.name()+" "+distro.version(),
"Kernel": os.uname()[0]+" "+os.uname()[2]+" "+platform.machine(),
"Shell": os.environ["SHELL"],
"DE": os.environ["DESKTOP_SESSION"],
"LANG": os.environ["LANG"],
"CPU" : out.split("\n")[4].split("\t: ")[1],
"Disk": format_bytes(psutil.disk_usage("/")[1])+" / "+format_bytes(psutil.disk_usage("/")[0])+" ("+str(psutil.disk_usage("/")[3])+"%)",
}

for j in [0, 1]:
    exec("color"+str(j)+"=''")
    for i in range(30, 38):
        exec("color"+str(j)+"+='\033[0m\033['+str(j)+';'+str(i)+'m███'")

print("")
for infoid, info, row in zip([color+thic+os.environ["USER"]+"\033[0m"+"@\033[0m"+os.uname()[1]]+[info+":" for info in infos]+["", color0, color1], [""]+[infos[info] for info in infos]+["", "", ""], pics[dist].split('\n')+["", "", ""]):
    print(" "+row+(21-len(row))*" ", color+infoid+"\033[0m", info)
print("")
